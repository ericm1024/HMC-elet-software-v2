
#ifndef VALVE_PINS_H
#define VALVE_PINS_H

enum valve {
        OX_ON_OFF = 0,
        FIRST_VALVE = OX_ON_OFF,
        OX_BLEED,
        OX_FLOW,
        N2_PURGE,
        N2_ON_OFF,
        FUEL_FLOW,
        NR_VALVES,
};

struct valve_properties {
        // the name of this valve
        const char *name;

        // the io pin we use to control this valve
        const byte pin;

        // is this valve a flow control valve?
        const bool is_flow;
};

static const struct valve_properties valve_properties[] {
        [OX_ON_OFF] = {
                .name = "oxygen on/off",
                .pin = 6,
                .is_flow = false
        },
        [OX_BLEED] = {
                .name = "oxygen bleed",
                .pin = 7,
                .is_flow = false,
        },
        [OX_FLOW] = {
                .name = "oxygen flow control",
                .pin = 8,
                .is_flow = true
        },
        [N2_PURGE] = {
                .name = "nitrogen purge",
                .pin = 10,
                .is_flow = false
        },
        [N2_ON_OFF] = {
                .name = "nitrogen on/off",
                .pin = 9,
                .is_flow = false
        },
        [FUEL_FLOW] = {
                .name = "fuel flow control",
                .pin = 11,
                .is_flow = true
        }
};

static inline const char *
valve_name(const enum valve v)
{
        return valve_properties[v].name;
}

static inline int
valve_pin(const enum valve v)
{
        return valve_properties[v].pin;
}

static inline bool
valve_is_flow(const enum valve v)
{
        return valve_properties[v].is_flow;
}

#endif // VALVE_PINS_H
